name: CI

on:
    pull_request:
    push:
        branches: [ master ]

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}

jobs:
    tests:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php: [ '8.3' ]
                dependency-versions: [ lowest, highest ]
                include:
                    -   php: '8.4'
                        dependency-versions: highest
                        composer-options: "--ignore-platform-req=php"
        name: Tests on PHP ${{ matrix.php }} & ${{ matrix.dependency-versions }} dependencies
        steps:
            -   name: Checkout
                uses: actions/checkout@v4

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '${{ matrix.php }}'
                    coverage: none

            -   name: Install Composer packages
                uses: ramsey/composer-install@v3
                with:
                    dependency-versions: '${{ matrix.dependency-versions }}'
                    composer-options: '${{ matrix.composer-options }}'

            -   name: Run tests
                run: vendor/bin/phpunit

    code-style:
        runs-on: ubuntu-latest

        steps:
            -   name: Checkout code
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0

            -   name: Set up PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.3'
                    coverage: none

            -   name: Install Composer packages
                uses: ramsey/composer-install@v3

            -   name: Run PHP CS Fixer
                run: ./vendor/bin/php-cs-fixer fix --dry-run

    phpstan:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                php: [ '8.3' ]
                dependency-versions: [ lowest, highest ]
        name: PHPStan on PHP ${{ matrix.php }} & ${{ matrix.dependency-versions }} dependencies
        steps:
            -   name: Checkout code
                uses: actions/checkout@v4

            -   name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '${{ matrix.php }}'
                    coverage: none

            -   name: Install Composer packages
                uses: ramsey/composer-install@v3
                with:
                    dependency-versions: '${{ matrix.dependency-versions }}'
                    composer-options: '${{ matrix.composer-options }}'

            -   name: Install Composer packages
                uses: ramsey/composer-install@v3

            -   name: Run PHPStan
                run: ./vendor/bin/phpstan analyze --memory-limit=-1
